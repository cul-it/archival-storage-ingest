#!/usr/bin/env ruby
# frozen_string_literal: true

require 'archival_storage_ingest/ingest_utils/ingest_utils'
require 'archival_storage_ingest/manifests/manifests'
require 'archival_storage_ingest/options/command_parser'
require 'archival_storage_ingest/preingest/base_env_initializer'
require 'archival_storage_ingest/preingest/ingest_env_initializer'
require 'archival_storage_ingest/ticket/ticket_handler'
require 'mail'

options = CommandParser::SetupIngestEnvCommandParser.new
options.parse!(ARGV)

sfs_prefix = if ENV['asi_develop'] || ENV['asi_deploy_manifest_develop']
               '/cul/app/archival_storage_ingest/test/deploy'
             else
               Manifests::DEFAULT_SFS_PREFIX
             end
file_identifier = Manifests::FileIdentifier.new(sfs_prefix: sfs_prefix, java_path: options.java_path,
                                                tika_path: options.tika_path)
manifest_validator = Manifests::ManifestValidator.new(storage_schema: options.storage_manifest_schema,
                                                      ingest_schema: options.ingest_manifest_schema)
env_initializer = Preingest::IngestEnvInitializer.new(ingest_root: options.ingest_root,
                                                      sfs_root: options.sfs_root,
                                                      file_identifier: file_identifier,
                                                      manifest_validator: manifest_validator)
env_initializer.initialize_ingest_env(data: options.data_path,
                                      depositor: options.depositor, collection_id: options.collection_id,
                                      cmf: options.storage_manifest, imf: options.ingest_manifest,
                                      sfs_location: options.sfs_bucket, ticket_id: options.ticket_id)

if env_initializer.size_mismatch.empty?
  puts "Total size of assets: #{env_initializer.total_size}\n"
  puts "Command to queue ingest:\narchival_storage_ingest -i #{env_initializer.config_path}\n"
else
  puts "Size mismatch detected\n"
  env_initializer.size_mismatch.each do |path, mismatch|
    manifest_size = mismatch[:manifest]
    fs_size = mismatch[:fs]
    puts "#{path}: manifest file size: #{manifest_size}, source file size: #{fs_size}\n"
  end
end

# Currently, the jira ticket handler sends email to update Jira.
# We will use this logic to send notification email to dev admin.
# If we change the implementation of jira ticket handler, update this function.
unless options.notify_email.nil?
  mail = Mail.new do
    subject "Setup ingest env complete for #{options.depositor}/#{options.collection_id}"
    body "Setup ingest env complete for #{options.depositor}/#{options.collection_id}"
  end
  mail.from(TicketHandler::DEFAULT_FROM)
  mail.to(options.notify_email)
  mail.deliver
end
