#!/usr/bin/env ruby
# frozen_string_literal: true

# Depreacated
# require 'archival_storage_ingest'
# require 'archival_storage_ingest/ingest_utils/configure_helper'
# require 'archival_storage_ingest/logs/archival_storage_ingest_logger'
# require 'archival_storage_ingest/messages/queues'
# require 'archival_storage_ingest/workers/fixity_worker'
# require 'archival_storage_ingest/logs/application_logger'

# ArchivalStorageIngest.configure do |config|
#   config.log_path = ENV['asi_ingest_fixity_s3_log_path'] ||
#                     "#{ENV.fetch('default_cular_log_path')}/ingest_fixity_s3.log"
#   config.dry_run = ENV['asi_ingest_fixity_s3_dry_run'] || false
#   config.polling_interval = ENV['asi_ingest_fixity_s3_polling_interval'].to_i if
#                             ENV['asi_ingest_fixity_s3_polling_interval']
#   config.inhibit_file = ENV['asi_ingest_fixity_s3_inhibit_file'] ||
#                         '/cul/app/archival_storage_ingest/control/ingest_fixity_s3.inhibit'
#   config.global_inhibit_file = ENV['asi_global_inhibit_file'] ||
#                                '/cul/app/archival_storage_ingest/control/archival_storage.inhibit'

#   config_params = {
#     queue_name: Queues::QUEUE_INGEST_FIXITY_S3,
#     dest_queue_names: [Queues::QUEUE_INGEST_FIXITY_COMPARISON],
#     asi_develop: ENV['asi_develop'] || ENV.fetch('asi_ingest_fixity_s3_develop', false),
#     asi_sandbox: ENV['asi_sandbox'] || ENV.fetch('asi_ingest_fixity_s3_sandbox', false)
#   }
#   configure_helper = IngestUtils::ConfigureHelper.new(config_params)
#   config = configure_helper.configure(config)

#   index_type = ArchivalStorageIngestLogger::INDEX_TYPE_INGEST
#   application_logger = ArchivalStorageIngestLogger.get_application_logger(
#     stage: config.stage, index_type:,
#     use_lambda_logger: IngestUtils.boolean_from_param(param: ENV.fetch('use_lambda_logger'), default: false)
#   )
#   config.worker = FixityWorker::IngestFixityS3Generator.new(application_logger)
# end

# ingest_manager = ArchivalStorageIngest::IngestManager.new
# ingest_manager.start_server
